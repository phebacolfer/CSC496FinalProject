{"version":3,"file":"component---src-pages-ideas-mdx-frontmatter-slug-js-content-file-path-ideas-homemade-pizza-index-mdx-b6831af6b2a5fabeeb15.js","mappings":"wNAGA,SAASA,EAAkBC,GACzB,OAAOC,EAAAA,cAAoBA,EAAAA,SAC7B,CAKA,MAJA,SAAoBD,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOE,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOJ,EAAYF,EAAAA,cAAoBE,EAAWH,EAAOC,EAAAA,cAAoBF,EAAmBC,IAAUD,GAC5G,E,wCCFA,MAAMS,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAAS,EAChC,OAAOV,EAAAA,cAAoBW,EAAAA,QAAQ,CACjCC,UAAWH,EAAKI,IAAIC,YAAYC,OAC/Bf,EAAAA,cAAoB,MAAO,CAC5BgB,UAAWC,EAAAA,IACVjB,EAAAA,cAAoBkB,EAAAA,EAAa,CAClCF,UAAWG,EAAAA,GACXC,OAAOC,EAAAA,EAAAA,GAASZ,EAAKI,IAAIC,YAAYQ,eAClCtB,EAAAA,cAAoB,IAAK,CAC5BgB,UAAWO,EAAAA,IACV,gBAAiBvB,EAAAA,cAAoB,IAAK,CAC3CgB,UAAWQ,EAAAA,IACVf,EAAKI,IAAIC,YAAYW,MAAOzB,EAAAA,cAAoB,IAAK,CACtDgB,UAAWO,EAAAA,IACV,cAAevB,EAAAA,cAAoB,IAAK,CACzCgB,UAAWQ,EAAAA,IACVf,EAAKI,IAAIC,YAAYY,UAAW1B,EAAAA,cAAoB,IAAK,CAC1DgB,UAAWO,EAAAA,IACV,iBAAkBvB,EAAAA,cAAoB,IAAK,CAC5CgB,UAAWQ,EAAAA,IACVf,EAAKI,IAAIC,YAAYa,MAAOjB,EAAS,EAoB7BkB,EAAOC,IAAA,IAAC,KAACpB,GAAK,SAAKT,EAAAA,cAAoB8B,EAAAA,QAAK,CACvDf,MAAON,EAAKI,IAAIC,YAAYC,OAC5B,EAEa,SAASgB,EAAiBhC,GACvC,OAAOC,EAAAA,cAAoBO,EAAUR,EAAOC,EAAAA,cAAoBgC,EAAqBjC,GACvF,C,4FClDWkC,EAAc,sCACdC,EAAc,sCC+CzB,MAzCe,IAA8B,IAA7B,UAAEtB,EAAS,SAAEF,GAAU,EACrC,OACE,uBAAKM,UDXc,mCCYjB,2BACE,sBAAIA,UDTU,mCCUZ,sBAAIA,UAAWiB,GACb,gBAAC,KAAI,CAACE,GAAG,IAAInB,UAAWkB,GAAa,SAIvC,sBAAIlB,UAAWiB,GACb,gBAAC,KAAI,CAACE,GAAG,SAASnB,UAAWkB,GAAa,aAI5C,sBAAIlB,UAAWiB,GACb,gBAAC,KAAI,CAACE,GAAG,UAAUnB,UAAWkB,GAAa,WAI7C,sBAAIlB,UAAWiB,GACb,gBAAC,KAAI,CAACE,GAAG,UAAUnB,UAAWkB,GAAa,WAI7C,sBAAIlB,UAAWiB,GACb,gBAAC,KAAI,CAACE,GAAG,cAAcnB,UAAWkB,GAAa,iBAMrD,4BACE,sBAAIlB,UDzCS,iCCyCYJ,GACxBF,GAGC,C,sDC5BV,UAhBY,IAAgB,IAAf,MAAEK,GAAO,EACpB,MAAMN,GAAO2B,EAAAA,EAAAA,IAAe,cAU5B,OACE,6BAAQrB,EAAM,MAAIN,EAAK4B,KAAKC,aAAavB,MAAc,C,gLCdpD,IAAIwB,EAAiB,sCACjBC,EAAY,iCACZjB,EAAS,8BACTJ,EAAM,2BACNF,EAAa,kCACbO,EAAQ,4B,sEC2BZ,MAAMiB,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBpC,GAC/B,MAAMqC,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfnC,EACFA,EAAWqC,GAGb,IAAIA,KAAsBrC,IAChC,CAACqC,EAAmBrC,GACzB,C","sources":["webpack://final-project/./ideas/homemade-pizza/index.mdx","webpack://final-project/./src/pages/ideas/{mdx.frontmatter__slug}.js","webpack://final-project/./src/pages/layout.module.css","webpack://final-project/./src/pages/layout.jsx","webpack://final-project/./src/pages/seo.jsx","webpack://final-project/./src/pages/ideas/index.module.css","webpack://final-project/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  return React.createElement(React.Fragment);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/CSC496FinalProject/final-project/ideas/homemade-pizza/index.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image';\nimport Layout from '../layout';\nimport Seo from '../seo';\nimport {intro, header, img, imgContain} from './index.module.css';\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"div\", {\n    className: imgContain\n  }, React.createElement(GatsbyImage, {\n    className: img,\n    image: getImage(data.mdx.frontmatter.hero_image)\n  })), React.createElement(\"p\", {\n    className: header\n  }, \"Cost Range: \"), React.createElement(\"p\", {\n    className: intro\n  }, data.mdx.frontmatter.cost), React.createElement(\"p\", {\n    className: header\n  }, \"Supplies: \"), React.createElement(\"p\", {\n    className: intro\n  }, data.mdx.frontmatter.supplies), React.createElement(\"p\", {\n    className: header\n  }, \"Description: \"), React.createElement(\"p\", {\n    className: intro\n  }, data.mdx.frontmatter.desc), children);\n};\nexport const query = graphql`\n  query($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        cost\n        desc\n        supplies\n        slug\n        hero_image {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--55bf4\";\nexport var heading = \"layout-module--heading--976ec\";\nexport var navLinkItem = \"layout-module--nav-link-item--77f62\";\nexport var navLinkText = \"layout-module--nav-link-text--8730d\";\nexport var navLinks = \"layout-module--nav-links--374a5\";","import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport {\r\n  container,\r\n  heading,\r\n  navLinks,\r\n  navLinkItem,\r\n  navLinkText, \r\n} from './layout.module.css'\r\n\r\nconst Layout = ({ pageTitle, children }) => {\r\n  return (\r\n    <div className={container}>\r\n      <nav>\r\n        <ul className={navLinks}>\r\n          <li className={navLinkItem}>\r\n            <Link to=\"/\" className={navLinkText}>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className={navLinkItem}>\r\n            <Link to=\"/ideas\" className={navLinkText}>\r\n              View All\r\n            </Link>\r\n          </li>\r\n          <li className={navLinkItem}>\r\n            <Link to=\"/search\" className={navLinkText}>\r\n              Search\r\n            </Link>\r\n          </li>\r\n          <li className={navLinkItem}>\r\n            <Link to=\"/random\" className={navLinkText}>\r\n              Random\r\n            </Link>\r\n          </li>\r\n          <li className={navLinkItem}>\r\n            <Link to=\"/contact-me\" className={navLinkText}>\r\n              Contact Me\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <main>\r\n        <h1 className={heading}>{pageTitle}</h1>\r\n        {children}\r\n      </main>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout","import * as React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nconst Seo = ({ title }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <title>{title} | {data.site.siteMetadata.title}</title>\r\n  )\r\n}\r\n\r\nexport default Seo","// extracted by mini-css-extract-plugin\nexport var grid_container = \"index-module--grid_container--a1cb5\";\nexport var grid_item = \"index-module--grid_item--88794\";\nexport var header = \"index-module--header--eb0aa\";\nexport var img = \"index-module--img--5046b\";\nexport var imgContain = \"index-module--imgContain--2c7c1\";\nexport var intro = \"index-module--intro--cec89\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","React","wrapper","MDXLayout","Object","assign","_provideComponents","components","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","className","imgContain","GatsbyImage","img","image","getImage","hero_image","header","intro","cost","supplies","desc","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","navLinkItem","navLinkText","to","useStaticQuery","site","siteMetadata","grid_container","grid_item","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}